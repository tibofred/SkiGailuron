<?php



namespace VW\ClientBundle\Repository;



/**

 * ClientRepository

 *

 * This class was generated by the Doctrine ORM. Add your own custom

 * repository methods below.

 */

class ClientRepository extends \Doctrine\ORM\EntityRepository

{

        function findAll(){

            

                return $this->findBy(array(), array('id' => 'ASC'));

        }

    

        function realisationsFindAll(){

            

            $qb = $this->createQueryBuilder('c');

            

            $qb



                ->where('c.portfolio  = :portfolio')

                ->setParameter('portfolio', true )

                ->orderBy('c.compagnie', 'ASC');



              ;



           

            return $qb

                    ->getQuery()

                    ->getResult()



                  ;

                }

    

                function clientsCat($id){







                    $qb = $this->createQueryBuilder('u');



                      $qb

                        ->innerJoin('u.categories', 'c')

                        ->where('c.id = :categorie_id')

                        ->setParameter('categorie_id', $id)

                        ->andwhere('u.portfolio  = :portfolio')

                        ->setParameter('portfolio', true )

                      ;



                      return $qb

                        ->getQuery()

                        ->getResult()

                      ;



                }

    

                public function getClientWithCategories(array $categoryNames)

                      {

                        $qb = $this->createQueryBuilder('a');

                        // On fait une jointure avec l'entité Category avec pour alias « c »

                        $qb

                          ->innerJoin('a.categories', 'c')

                          ->addSelect('c')

                        ;

                        // Puis on filtre sur le nom des catégories à l'aide d'un IN

                        $qb->where($qb->expr()->in('c.nom', $categoryNames));

                        // La syntaxe du IN et d'autres expressions se trouve dans la documentation Doctrine

                        // Enfin, on retourne le résultat

                        return $qb

                          ->getQuery()

                          ->getResult()

                          ;

                      }

    

   

    

}

